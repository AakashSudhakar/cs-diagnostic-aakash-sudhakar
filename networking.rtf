{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset134 PingFangSC-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Here, I attempt to explain what happens from the moment we type in a web address to when the website appears in front of the user. \
\
When we type in the web address, we as a client make a call to the server to retrieve information from them to access. The server checks the security of our connection via HTTP or HTTPS to assure that the connection is secure for data packet retrieval. If the connection is secure, the information is sent client-side to affirm data retrieval and the web page is loaded. \
\
\An interpreted language is a language that is understood natively by one’s computer, not needed the use of an additional compiling software to run and test code. Interpreted code does not require the use of compilers and/or additional IDEs and often have larger ranges in coding capability, but are often more complicated code (some are assembly-level and lower levels of abstraction) and are sometimes slower. Compiled languages are languages that are not understood natively my one’s natural computing code and thus must adopt the use of an independent compiler to read the code, interpret it further, and communicate with the computer in its own language as to the meaning behind the sample code. Compiled languages are often more user-friendly and the code is often easier to read while being faster, but often also lack development range.\
\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0\'af\\_(
\f2 \'a5\'c4
\f1 )_/\'af}
